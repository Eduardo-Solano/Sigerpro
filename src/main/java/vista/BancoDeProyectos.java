/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controladores.ControladoraProyecto;
import controladores.ExportadorPDF;
import entidad.Docente;
import entidad.Empresa;
import entidad.Proyecto;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import entidad.Estudiante;
import entidad.Persona;
import entidad.DocenteProyecto;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import javax.swing.table.TableRowSorter;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.util.regex.PatternSyntaxException;
import java.util.List;
import java.util.Map;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Francisco Perez
 */
public class BancoDeProyectos extends javax.swing.JFrame {
    
    Adaptador a = new Adaptador();
    
    private FormularioProyecto formProyecto;
    private AnteproyectoDocente anteproyectoDocente;
    private AsignarEstudianteProyecto formAsignar;
    private ProyectoRevAse proyectoRevAse;
    private final Map<String, JFrame> ventanasAbiertas = new HashMap<>();
    public String txtUser = "Buscar Proyecto";
    private String textoBotonFiltrar;
    private TableRowSorter<DefaultTableModel> sorter;
    private List<Proyecto> listaProyectos;    
    private ControladoraProyecto controladoraProyecto;
    private String[] filtros = {
        "Asignado",
        "En revision",
        "Sin asignar"
    };
    private int indiceTexto = 0;
    private int indiceOrden = -1;

    /**
     * Creates new form BancoDeProyectos
     */
    public BancoDeProyectos() {
        initComponents();
        controladoraProyecto = new ControladoraProyecto();
        panelOpciones.setVisible(false);
        a.ajustarImagenALabel(logoSistema, "Imagenes/Imagen1.png");
        a.ajustarImagenALabel(Agregar, "Imagenes/AgregarArchivo.png");
        
        textoBotonFiltrar = BtnFiltrar.getText();
        textoBotonFiltrar = BtnFiltrar.getText();
        cargarTablaProyectos();        
        txtBuscarProyecto.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                filtrarTabla();
            }
            
            @Override
            public void removeUpdate(DocumentEvent e) {
                filtrarTabla();
            }
            
            @Override
            public void changedUpdate(DocumentEvent e) {
                filtrarTabla();
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FondoBlanco = new javax.swing.JPanel();
        panelOpciones = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtBuscarProyecto = new javax.swing.JTextField();
        BtnFiltrar = new javax.swing.JButton();
        Agregar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaProyectos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtTitulo = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        panelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtEmpresa = new javax.swing.JTextField();
        txtEstado = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEstudiantes = new javax.swing.JTextArea();
        txtFecha = new javax.swing.JTextField();
        txtSugeridos = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDocentes = new javax.swing.JTextArea();
        jButtonEvaluar = new javax.swing.JButton();
        logoSistema = new javax.swing.JLabel();
        btnDocente = new javax.swing.JButton();
        btnResidente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnSolicitarP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FondoBlanco.setBackground(new java.awt.Color(161, 161, 161));
        FondoBlanco.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelOpciones.setBackground(new java.awt.Color(153, 153, 153));
        panelOpciones.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("AnteProyecto");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        panelOpciones.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 140, 36));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Proyecto");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        panelOpciones.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 42, 140, 28));

        FondoBlanco.add(panelOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 180, 140, 70));

        txtBuscarProyecto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtBuscarProyecto.setForeground(new java.awt.Color(102, 102, 102));
        txtBuscarProyecto.setText("Buscar Proyecto");
        txtBuscarProyecto.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        txtBuscarProyecto.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtBuscarProyecto.setOpaque(true);
        txtBuscarProyecto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarProyectoMouseClicked(evt);
            }
        });
        txtBuscarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarProyectoActionPerformed(evt);
            }
        });
        FondoBlanco.add(txtBuscarProyecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 127, 220, 40));

        BtnFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Filtro.png"))); // NOI18N
        BtnFiltrar.setText("Filtrar");
        BtnFiltrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnFiltrarActionPerformed(evt);
            }
        });
        FondoBlanco.add(BtnFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 127, 120, 40));

        Agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AgregarArchivo.png"))); // NOI18N
        Agregar.setToolTipText("Agregar nuevo proyecto");
        Agregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Agregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgregarMouseClicked(evt);
            }
        });
        FondoBlanco.add(Agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 40, 40));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        TablaProyectos.setBackground(new java.awt.Color(255, 140, 118));
        TablaProyectos.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        TablaProyectos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Empresa", "Estado", "Estudiante", "Num Control", "Descripcion", "Fecha de registro", "Docente", "Teléfono de contacto", "Número de alumnos sugeridos"
            }
        ));
        TablaProyectos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaProyectosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaProyectos);

        FondoBlanco.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 750, 400));

        jPanel1.setBackground(new java.awt.Color(32, 31, 29));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTitulo.setBackground(new java.awt.Color(255, 255, 255));
        txtTitulo.setFont(new java.awt.Font("Roboto", 1, 52)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(234, 114, 9));
        txtTitulo.setText("Banco De Proyectos");
        jPanel1.add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 25, 510, 70));

        btnCancelar.setBackground(new java.awt.Color(153, 0, 0));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 110, 70));

        FondoBlanco.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1366, 120));

        panelDatos.setBackground(new java.awt.Color(153, 153, 153));
        panelDatos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Docentes involucrados:");
        panelDatos.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Estado del proyecto:");
        panelDatos.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Estudiantes involucrados::");
        panelDatos.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Descripción del proyecto");
        panelDatos.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Fecha de registro");
        panelDatos.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("Alumnos Sugeridos:");
        panelDatos.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Empresa:");
        panelDatos.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Nombre del proyecto::");
        panelDatos.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        txtNombre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(51, 51, 51));
        txtNombre.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtNombre.setFocusable(false);
        panelDatos.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 230, 40));

        txtEmpresa.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtEmpresa.setForeground(new java.awt.Color(51, 51, 51));
        txtEmpresa.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtEmpresa.setFocusable(false);
        panelDatos.add(txtEmpresa, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 230, 40));

        txtEstado.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtEstado.setForeground(new java.awt.Color(51, 51, 51));
        txtEstado.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtEstado.setFocusable(false);
        panelDatos.add(txtEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 230, 40));

        jScrollPane2.setFocusable(false);

        txtEstudiantes.setColumns(20);
        txtEstudiantes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtEstudiantes.setForeground(new java.awt.Color(51, 51, 51));
        txtEstudiantes.setRows(5);
        txtEstudiantes.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtEstudiantes.setFocusable(false);
        jScrollPane2.setViewportView(txtEstudiantes);

        panelDatos.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 470, 120));

        txtFecha.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(51, 51, 51));
        txtFecha.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtFecha.setFocusable(false);
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });
        panelDatos.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 230, 40));

        txtSugeridos.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtSugeridos.setForeground(new java.awt.Color(51, 51, 51));
        txtSugeridos.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtSugeridos.setFocusable(false);
        panelDatos.add(txtSugeridos, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, 50, 50));

        jScrollPane3.setFocusable(false);

        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(51, 51, 51));
        txtDescripcion.setRows(5);
        txtDescripcion.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtDescripcion.setFocusable(false);
        jScrollPane3.setViewportView(txtDescripcion);

        panelDatos.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 230, 120));

        jScrollPane4.setFocusable(false);

        txtDocentes.setColumns(20);
        txtDocentes.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtDocentes.setForeground(new java.awt.Color(51, 51, 51));
        txtDocentes.setRows(5);
        txtDocentes.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(153, 153, 153)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));
        txtDocentes.setFocusable(false);
        jScrollPane4.setViewportView(txtDocentes);

        panelDatos.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 250, 120));

        jButtonEvaluar.setBackground(new java.awt.Color(51, 255, 102));
        jButtonEvaluar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonEvaluar.setForeground(new java.awt.Color(0, 0, 0));
        jButtonEvaluar.setText("Evaluar");
        jButtonEvaluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonEvaluarMouseClicked(evt);
            }
        });
        jButtonEvaluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEvaluarActionPerformed(evt);
            }
        });
        panelDatos.add(jButtonEvaluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 510, -1, -1));

        FondoBlanco.add(panelDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 510, 577));
        FondoBlanco.add(logoSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 620, 120, 100));

        btnDocente.setBackground(new java.awt.Color(51, 51, 51));
        btnDocente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDocente.setForeground(new java.awt.Color(255, 255, 255));
        btnDocente.setText("Asignar Docente");
        btnDocente.setBorder(null);
        btnDocente.setOpaque(true);
        btnDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocenteActionPerformed(evt);
            }
        });
        FondoBlanco.add(btnDocente, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 130, 140, 40));

        btnResidente.setBackground(new java.awt.Color(51, 51, 51));
        btnResidente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnResidente.setForeground(new java.awt.Color(255, 255, 255));
        btnResidente.setText("Agregar residente");
        btnResidente.setBorder(null);
        btnResidente.setOpaque(true);
        btnResidente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResidenteMouseClicked(evt);
            }
        });
        btnResidente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResidenteActionPerformed(evt);
            }
        });
        FondoBlanco.add(btnResidente, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, 140, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Si desea consultar la información seleccione una fila.");
        FondoBlanco.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 320, -1));

        jButton1.setBackground(new java.awt.Color(0, 51, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setText("Generar informe");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        FondoBlanco.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 170, 40));

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setText("Actualizar Tabla");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        FondoBlanco.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 660, 170, 40));

        btnSolicitarP.setBackground(new java.awt.Color(0, 102, 102));
        btnSolicitarP.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSolicitarP.setText("Habilitar Prorroga");
        btnSolicitarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitarPActionPerformed(evt);
            }
        });
        FondoBlanco.add(btnSolicitarP, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 660, 190, 40));

        getContentPane().add(FondoBlanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 740));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void limpiarVista() {
        txtNombre.setText("");
        txtEmpresa.setText("");
        txtEstado.setText("");
        txtDescripcion.setText("");
        txtEstudiantes.setText("");
        txtFecha.setText("");
        txtSugeridos.setText("");
        txtDocentes.setText("");
        
    }
    
    private void abrirVentanaUnica(String clave, JFrame ventana) {
    if (!ventanasAbiertas.containsKey(clave)) {
        ventanasAbiertas.put(clave, ventana);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);

        ventana.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                ventanasAbiertas.remove(clave);
            }

            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                ventanasAbiertas.remove(clave);
            }
        });
    } else {
        JFrame v = ventanasAbiertas.get(clave);
        v.setExtendedState(JFrame.NORMAL);
        v.toFront();
        v.requestFocus();
    }
}

    
    private void BtnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnFiltrarActionPerformed
        limpiarVista();        
        indiceOrden++;        
        
        if (indiceOrden >= filtros.length) {
            indiceOrden = -1;            
            BtnFiltrar.setText("Filtrar");            
            sorter.setSortKeys(null);            
            filtrarTabla();            
            return;            
        }
        
        String filtroSeleccionado = filtros[indiceOrden];        
        BtnFiltrar.setText(filtroSeleccionado);        
        
        sorter.setSortKeys(null);        
        switch (filtroSeleccionado) {
            case "Asignado":
                sorter.setRowFilter(new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        String estudiante = entry.getStringValue(3);                        
                        String docente = entry.getStringValue(9);                        
                        return !estudiante.equals("Sin asignar") && docente.equals("Sin asignar");
                    }
                });
                break;
            
            case "En revision":
                sorter.setRowFilter(new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        String estado = entry.getStringValue(2);                        
                        return estado.equalsIgnoreCase("En revisión");                        
                    }
                });
                break;
            
            case "Sin asignar":
                sorter.setRowFilter(new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        String estado = entry.getStringValue(2);                        
                        return estado.equalsIgnoreCase("Sin asignar");                        
                    }
                });
        }
    }//GEN-LAST:event_BtnFiltrarActionPerformed

    private void txtBuscarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarProyectoActionPerformed
    }//GEN-LAST:event_txtBuscarProyectoActionPerformed

    private void txtBuscarProyectoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarProyectoMouseClicked
        if (txtBuscarProyecto.getText().equals(txtUser)) {
            txtBuscarProyecto.setText("");
        }
    }//GEN-LAST:event_txtBuscarProyectoMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        a.animarSalida(this);
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void AgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarMouseClicked
        // Disable the component immediately to prevent multiple clicks
        Agregar.setEnabled(false);
    
    if (formProyecto == null || !formProyecto.isDisplayable()) {
        formProyecto = new FormularioProyecto();
        formProyecto.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                cargarTablaProyectos();
                Agregar.setEnabled(true);
            }
        });
    }
    
    abrirVentanaUnica("formProyecto", formProyecto);
    }//GEN-LAST:event_AgregarMouseClicked

    public void cargarTablaProyectos() {
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;                
            }
        };
        
        modelo.addColumn("Nombre");
        modelo.addColumn("Empresa");
        modelo.addColumn("Estado");
        modelo.addColumn("Estudiantes");
        modelo.addColumn("Número de control");
        modelo.addColumn("Descripción");
        modelo.addColumn("Fecha de registro");
        modelo.addColumn("Teléfono de contacto");
        modelo.addColumn("Número de alumnos sugeridos");
        modelo.addColumn("Docente");
        
        TablaProyectos.setModel(modelo);
        
        if (sorter == null) {
            sorter = new TableRowSorter<>(modelo);
            TablaProyectos.setRowSorter(sorter);
        } else {
            sorter.setModel(modelo);
        }
        
        if (controladoraProyecto == null) {
            controladoraProyecto = new ControladoraProyecto();
        }
        
        if (listaProyectos == null) {
            listaProyectos = new ArrayList<>();
        } else {
            listaProyectos.clear();            
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        
        try {
            for (Proyecto proy : controladoraProyecto.listarProyectos()) {
                listaProyectos.add(proy);                
                
                String nombre = proy.getNombreProyecto();
                String empresaNombre = "Sin empresa asignada";
                String contactoEmpresa = "N/A";
                String descripcionProyecto = proy.getDescripcion();
                
                Empresa empresa = proy.getIdEmpresa();
                if (empresa != null) {
                    empresaNombre = empresa.getNombreEmpresa();
                    contactoEmpresa = empresa.getNumeroTelefonico();
                }
                
                Date fechaDate = proy.getFechaRegistro();
                String fecha = (fechaDate != null) ? sdf.format(fechaDate) : "";
                Integer sugeridos = proy.getNumAlumnosSug();

                // Usar StringBuilder para estudiantes y docentes (como lo tenías)
                StringBuilder nombresEstudiantes = new StringBuilder("Sin asignar");
                StringBuilder numerosControl = new StringBuilder("Sin asignar");
                StringBuilder nombresDocentes = new StringBuilder("Sin asignar");
                
                String estadoProyecto = proy.getEstado() != null ? proy.getEstado() : "Estado Desconocido";
                
                Collection<Estudiante> estudiantes = proy.getEstudianteCollection();
                if (estudiantes != null && !estudiantes.isEmpty()) {
                    nombresEstudiantes.setLength(0);
                    numerosControl.setLength(0);
                    for (Estudiante est : estudiantes) {
                        Persona per = est.getIdPersona();
                        if (per != null) {
                            String nombreCompleto = per.getNombre() + " "
                                    + (per.getApellidoP() != null ? per.getApellidoP() : "")
                                    + (per.getApellidoM() != null && !per.getApellidoM().isEmpty() ? " " + per.getApellidoM() : "");
                            nombresEstudiantes.append(nombreCompleto.trim()).append(", ");
                        }
                        numerosControl.append(est.getNumControl()).append(", ");
                    }
                    if (nombresEstudiantes.length() > 0) {
                        nombresEstudiantes.setLength(nombresEstudiantes.length() - 2);
                    }
                    if (numerosControl.length() > 0) {
                        numerosControl.setLength(numerosControl.length() - 2);
                    }
                }
                
                Collection<DocenteProyecto> proyectoDocentes = proy.getDocenteProyectoCollection();
                if (proyectoDocentes != null && !proyectoDocentes.isEmpty()) {
                    nombresDocentes.setLength(0);
                    for (DocenteProyecto pd : proyectoDocentes) {
                        Docente docente = pd.getDocente();
                        Persona perDocente = docente.getIdPersona();
                        if (perDocente != null) {
                            String nombreCompletoDocente = perDocente.getNombre() + " "
                                    + (perDocente.getApellidoP() != null ? perDocente.getApellidoP() : "")
                                    + (perDocente.getApellidoM() != null && !perDocente.getApellidoM().isEmpty() ? " " + perDocente.getApellidoM() : "");
                            nombresDocentes.append(nombreCompletoDocente.trim())
                                    .append(" (").append(pd.getRolDocente()).append("), ");
                        }
                    }
                    if (nombresDocentes.length() > 0) {
                        nombresDocentes.setLength(nombresDocentes.length() - 2);
                    }
                }
                
                modelo.addRow(new Object[]{
                    nombre,
                    empresaNombre,
                    estadoProyecto,
                    nombresEstudiantes.toString(),
                    numerosControl.toString(),
                    descripcionProyecto,
                    fecha,
                    contactoEmpresa,
                    sugeridos,
                    nombresDocentes.toString()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar proyectos: " + e.getMessage(), "Error de Carga", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

        // Asegurarse de que el botón de evaluar esté oculto/deshabilitado al recargar la tabla
        if (jButtonEvaluar != null) {
            jButtonEvaluar.setVisible(false);
            jButtonEvaluar.setEnabled(false);
        }
    }    
    

    private void TablaProyectosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaProyectosMouseClicked
        
        int fila = TablaProyectos.rowAtPoint(evt.getPoint());

        // Asegúrate de que la fila seleccionada es válida y no fuera de los límites del modelo
        if (fila >= 0 && fila < TablaProyectos.getRowCount()) {
            // ¡IMPORTANTE! Convertir el índice de la fila de la vista al índice del modelo.
            // Esto es crucial si la tabla está ordenada o filtrada, ya que la fila visible
            // no siempre corresponde al mismo índice en la 'listaProyectos' subyacente.
            int modeloFila = TablaProyectos.convertRowIndexToModel(fila);

            // Obtener el objeto Proyecto completo de nuestra lista 'listaProyectos'
            // 'listaProyectos' debe ser la lista que cargaste en cargarTablaProyectos()
            Proyecto proyectoSeleccionado = listaProyectos.get(modeloFila);

            // --- Actualizar los campos del panel de datos con la información del objeto Proyecto ---
            txtNombre.setText(proyectoSeleccionado.getNombreProyecto());
            // Manejar posibles valores nulos para Empresa y sus propiedades
            txtEmpresa.setText(proyectoSeleccionado.getIdEmpresa() != null
                    ? proyectoSeleccionado.getIdEmpresa().getNombreEmpresa() : "Sin empresa asignada");
            txtEstado.setText(proyectoSeleccionado.getEstado());
            
            txtDescripcion.setText(proyectoSeleccionado.getDescripcion());
            // Formatear la fecha si es necesario
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            txtFecha.setText(proyectoSeleccionado.getFechaRegistro() != null
                    ? sdf.format(proyectoSeleccionado.getFechaRegistro()) : "N/A");

            // Asumiendo que getDocentesFormateados() y getEstudiantesFormateados()
            // son métodos que tienes en tu clase Proyecto (o los adaptaste para que existan)
            txtDocentes.setText(obtenerDocentesFormateados(proyectoSeleccionado));
            txtEstudiantes.setText(obtenerEstudiantesFormateados(proyectoSeleccionado));

            // Convertir el Integer a String para setText
            txtSugeridos.setText(String.valueOf(proyectoSeleccionado.getNumAlumnosSug()));

            // --- Lógica para el botón de Evaluar Proyecto ---
            // Asegúrate de que btnEvaluarProyectoPanel esté declarado y añadido a tu panelDatos en el diseñador.
            // Solo habilitar y mostrar el botón si el estado es "En revision"
            // Después
            String estado = proyectoSeleccionado.getEstado().trim();
            if ("En revisión".equalsIgnoreCase(estado) || "En corrección".equalsIgnoreCase(estado)) {
                jButtonEvaluar.setVisible(true);
                jButtonEvaluar.setEnabled(true);
            } else {
                jButtonEvaluar.setVisible(false);
                jButtonEvaluar.setEnabled(false);
            }

            
        } else {
            // Si no hay fila seleccionada, limpiar todos los campos del panel de datos
            txtNombre.setText("");
            txtEmpresa.setText("");
            txtEstado.setText("");
            txtEstudiantes.setText("");
            txtDescripcion.setText("");
            txtFecha.setText("");
            txtDocentes.setText("");
            txtSugeridos.setText("");

            // Ocultar y deshabilitar el botón de Evaluar si no hay selección válida
            if (jButtonEvaluar != null) { // Evitar NullPointerException si el botón no está inicializado
                jButtonEvaluar.setVisible(false);
                jButtonEvaluar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_TablaProyectosMouseClicked

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        PanelPrincipal p = new PanelPrincipal();
        p.estadoFrame = false;
        this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocenteActionPerformed
        panelOpciones.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_btnDocenteActionPerformed

    private void btnResidenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResidenteActionPerformed
         btnResidente.setEnabled(false);

    if (formAsignar == null || !formAsignar.isDisplayable()) {
        formAsignar = new AsignarEstudianteProyecto();
        formAsignar.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                JOptionPane.showMessageDialog(null, "Ventana Cerrada");
                btnResidente.setEnabled(true);
            }
        });
    }

    abrirVentanaUnica("formAsignar", formAsignar);
    }//GEN-LAST:event_btnResidenteActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        panelOpciones.setVisible(false);

    if (anteproyectoDocente == null || !anteproyectoDocente.isDisplayable()) {
        anteproyectoDocente = new AnteproyectoDocente();
    }

    abrirVentanaUnica("anteproyectoDocente", anteproyectoDocente);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        panelOpciones.setVisible(false);

    if (proyectoRevAse == null || !proyectoRevAse.isDisplayable()) {
        proyectoRevAse = new ProyectoRevAse();
    }

    abrirVentanaUnica("proyectoRevAse", proyectoRevAse);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void jButtonEvaluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEvaluarMouseClicked

    }//GEN-LAST:event_jButtonEvaluarMouseClicked

    private void jButtonEvaluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEvaluarActionPerformed
        int filaSeleccionada = TablaProyectos.getSelectedRow();
        
        if (filaSeleccionada != -1) { // Asegurarse de que hay una fila seleccionada
            // Convertir el índice de la fila seleccionada en la vista al índice del modelo
            int modeloFila = TablaProyectos.convertRowIndexToModel(filaSeleccionada);

            // Obtener el objeto Proyecto real de la lista
            Proyecto proyectoAevaluar = listaProyectos.get(modeloFila);

            // Validar nuevamente que el estado sea "En revision" antes de abrir la ventana de evaluación
            if ("En revisión".equalsIgnoreCase(proyectoAevaluar.getEstado().trim()) ||"En corrección".equalsIgnoreCase(proyectoAevaluar.getEstado().trim()) ) {
                // Crear una instancia de EvaluarProyecto, pasándole el proyecto y una referencia a esta ventana
                EvaluarProyecto ventanaEvaluar = new EvaluarProyecto(proyectoAevaluar, this);
                ventanaEvaluar.setLocationRelativeTo(this); // Centrar la ventana de evaluación respecto a BancoDeProyectos
                ventanaEvaluar.setVisible(true);
            } else {
                // Esto no debería ocurrir si el botón está bien controlado, pero es una buena práctica
                JOptionPane.showMessageDialog(this, "El proyecto seleccionado no está en estado 'En revisión'.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                jButtonEvaluar.setVisible(false); // Ocultar por si acaso
                jButtonEvaluar.setEnabled(false); // Deshabilitar por si acaso
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un proyecto de la tabla para evaluar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }    }//GEN-LAST:event_jButtonEvaluarActionPerformed

    private void btnResidenteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResidenteMouseClicked
        // TODO add your handling code here:
        // Disable the component immediately to prevent multiple clicks
//        Agregar.setEnabled(false); // Assuming 'Agregar' is the JLabel you want to disable
//
//        FormularioProyecto formProyecto = new FormularioProyecto();
//        a.animarEntrada(formProyecto);
//        formProyecto.setLocationRelativeTo(null);
//        formProyecto.setVisible(true);
//        formProyecto.addWindowListener(new java.awt.event.WindowAdapter() {
//            @Override
//            public void windowClosed(java.awt.event.WindowEvent e) {
//                cargarTablaProyectos();
//                Agregar.setEnabled(true); // Re-enable the component when FormularioProyecto closes
//            }
//        });
    }//GEN-LAST:event_btnResidenteMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// Preguntar si desea usar el nombre por defecto o personalizarlo
        int opcion = JOptionPane.showConfirmDialog(null, "¿Deseas guardar el PDF como 'ReporteEmpresas.pdf'?", "Nombre del archivo", JOptionPane.YES_NO_OPTION);
        
        String nombreArchivo;
        if (opcion == JOptionPane.YES_OPTION) {
            nombreArchivo = "ReporteEmpresas";
        } else {
            nombreArchivo = JOptionPane.showInputDialog(null, "Ingresa el nombre del archivo:", "Nombre personalizado", JOptionPane.PLAIN_MESSAGE);
            
            if (nombreArchivo == null || nombreArchivo.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nombre inválido. Se usará el nombre por defecto.");
                nombreArchivo = "ReporteExpediente";
            }
        }

// Generar el PDF con el nombre elegido (sin extensión .pdf para que ExportadorPDF lo maneje)
        ExportadorPDF e = new ExportadorPDF();
        e.generarReporteProyectos(
                TablaProyectos,
                nombreArchivo,
                "C:\\Users\\es982\\Downloads\\Sigerpro\\src\\main\\resources\\Imagenes\\ITO.png", // logo escuela
                "C:\\Users\\es982\\Downloads\\Sigerpro\\src\\main\\resources\\Imagenes\\Imagen1.png" // logo sistema
        );            // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        cargarTablaProyectos();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnSolicitarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitarPActionPerformed
        // TODO add your handling code here:
       
        int fila = TablaProyectos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un proyecto.");
            return;
        }
         btnSolicitarP.setEnabled(false);
        //int idProyecto = (int) tableProyectos.getValueAt(fila, 0);
        String nombreP = (String) TablaProyectos.getValueAt(fila, 0);
        //Buscar el proyecto
        //ArrayList<Proyecto>
        if (controladoraProyecto.habilitarProrroga(nombreP)) {
            CargarDocumento cDc = new CargarDocumento();
            cDc.setVisible(true);
        cDc.setLocationRelativeTo(null);
        cDc.setVisible(true);
        cDc.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                JOptionPane.showMessageDialog(null, "Ventana Cerrada");
                //cargarTablaProyectos();
                btnSolicitarP.setEnabled(true); // Re-enable the component when FormularioProyecto closes
            }
        });
        }
    }//GEN-LAST:event_btnSolicitarPActionPerformed
    
    private void filtrarTabla() {
        String textoBusqueda = txtBuscarProyecto.getText().trim();        
        final String filtroActualBtn = (indiceOrden != -1) ? filtros[indiceOrden] : "";        
        if ((textoBusqueda.isEmpty() || textoBusqueda.equals(txtUser)) && indiceOrden == -1) {
            sorter.setRowFilter(null);            
            return;
        }
        
        RowFilter<DefaultTableModel, Object> textFilter = null;        
        if (!textoBusqueda.isEmpty() && !textoBusqueda.equals(txtUser)) {
            try {
                textFilter = RowFilter.regexFilter("(?i)" + Pattern.quote(textoBusqueda));                
            } catch (PatternSyntaxException e) {
                System.err.println("Expresión de búsqueda inválida: " + e.getMessage());                
                textFilter = null;                
            }
        }
        
        RowFilter<DefaultTableModel, Object> stateFilter = null;        
        switch (filtroActualBtn) {
            case "Asignado":
                stateFilter = new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        String estadoProyecto = entry.getStringValue(2);
                        String docenteCol = entry.getStringValue(9);
                        String estudiantesCol = entry.getStringValue(3);                        
                        return !estudiantesCol.equals("Sin asignar") && docenteCol.equals("Sin asignar");
                    }
                };
                break;
            case "En revision":
                stateFilter = new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        String estadoProyecto = entry.getStringValue(2);
                        return estadoProyecto.equalsIgnoreCase("En revision");                        
                    }
                };
                break;
            case "Sin asignar":
                stateFilter = new RowFilter<DefaultTableModel, Object>() {
                    @Override
                    public boolean include(RowFilter.Entry<? extends DefaultTableModel, ? extends Object> entry) {
                        String estadoProyecto = entry.getStringValue(2);
                        return estadoProyecto.equalsIgnoreCase("Sin asignar");                        
                    }
                };
                break;
        }
        
        if (textFilter != null && stateFilter != null) {
            List<RowFilter<DefaultTableModel, Object>> filters = new ArrayList<>();            
            filters.add(textFilter);            
            filters.add(stateFilter);
            sorter.setRowFilter(RowFilter.andFilter(filters));            
        } else if (textFilter != null) {
            sorter.setRowFilter(textFilter);            
        } else if (stateFilter != null) {
            sorter.setRowFilter(stateFilter);            
        } else {
            sorter.setRowFilter(null);            
        }
    }
    
    private String obtenerDocentesFormateados(Proyecto proyecto) {
        if (proyecto.getDocenteProyectoCollection() == null || proyecto.getDocenteProyectoCollection().isEmpty()) {
            return "Sin asignar";
        }
        StringBuilder nombresDocentes = new StringBuilder();
        for (DocenteProyecto pd : proyecto.getDocenteProyectoCollection()) {
            Docente docente = pd.getDocente();
            Persona perDocente = docente.getIdPersona();
            if (perDocente != null) {
                String nombreCompletoDocente = perDocente.getNombre() + " "
                        + (perDocente.getApellidoP() != null ? perDocente.getApellidoP() : "")
                        + (perDocente.getApellidoM() != null && !perDocente.getApellidoM().isEmpty() ? " " + perDocente.getApellidoM() : "");
                nombresDocentes.append(nombreCompletoDocente.trim())
                        .append(" (").append(pd.getRolDocente()).append("), ");
            }
        }
        if (nombresDocentes.length() > 0) {
            nombresDocentes.setLength(nombresDocentes.length() - 2);
        }
        return nombresDocentes.toString();
    }
    
    private String obtenerEstudiantesFormateados(Proyecto proyecto) {
        if (proyecto.getEstudianteCollection() == null || proyecto.getEstudianteCollection().isEmpty()) {
            return "Sin asignar";
        }
        StringBuilder nombresEstudiantes = new StringBuilder();
        for (Estudiante est : proyecto.getEstudianteCollection()) {
            Persona per = est.getIdPersona();
            if (per != null) {
                String nombreCompleto = per.getNombre() + " "
                        + (per.getApellidoP() != null ? per.getApellidoP() : "")
                        + (per.getApellidoM() != null && !per.getApellidoM().isEmpty() ? " " + per.getApellidoM() : "");
                nombresEstudiantes.append(nombreCompleto.trim()).append(", ");
            }
        }
        if (nombresEstudiantes.length() > 0) {
            nombresEstudiantes.setLength(nombresEstudiantes.length() - 2);
        }
        return nombresEstudiantes.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BancoDeProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BancoDeProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BancoDeProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BancoDeProyectos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BancoDeProyectos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Agregar;
    private javax.swing.JButton BtnFiltrar;
    private javax.swing.JPanel FondoBlanco;
    private javax.swing.JTable TablaProyectos;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDocente;
    private javax.swing.JButton btnResidente;
    private javax.swing.JButton btnSolicitarP;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonEvaluar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel logoSistema;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelOpciones;
    private javax.swing.JTextField txtBuscarProyecto;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextArea txtDocentes;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextArea txtEstudiantes;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSugeridos;
    private javax.swing.JLabel txtTitulo;
    // End of variables declaration//GEN-END:variables
}
