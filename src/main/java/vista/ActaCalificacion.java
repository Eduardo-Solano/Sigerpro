/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controladores.ControladoraEstudiante;
import entidad.Estudiante;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import entidad.Departamento;
import entidad.Persona;
import entidad.Proyecto;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author Sabás
 */
public class ActaCalificacion extends javax.swing.JFrame {
    private Estudiante estudianteActual;
    boolean estadoFrame;
    
    /**
     * Creates new form ActaCalificacion
     */
    public ActaCalificacion() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
         txtNumeroControl.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                btnBuscar.doClick();
            }
        }
    });

    txtVistaPrevia.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                if (!txtVistaPrevia.getText().isEmpty() &&
                    !txtVistaPrevia.getText().equalsIgnoreCase("Estudiante no encontrado.")) {
                    btnGenerarPDF.doClick();
                }
            }
        }
    });
    }
    
    
    private void addEvaluacionTable(Document doc, String titulo) throws DocumentException {
    doc.add(new Paragraph(titulo, new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD)));

    PdfPTable table = new PdfPTable(3);
    table.setWidthPercentage(100);
    table.setSpacingBefore(5f);
    table.setWidths(new float[]{6f, 1f, 1f});

    // Encabezados
    table.addCell(getCenteredCell("Criterios a evaluar", true));
    table.addCell(getCenteredCell("Valor", true));
    table.addCell(getCenteredCell("Evaluación", true));

    String[][] criterios = {
        {"Portada", "2"}, {"Agradecimientos", "2"}, {"Resumen", "2"}, {"Índice", "2"},
        {"Introducción", "2"}, {"Problemas a resolver, priorizándolos", "5"}, {"Objetivos", "3"},
        {"Justificación", "5"}, {"Marco teórico (fundamentos teóricos)", "10"},
        {"Procedimiento y descripción de las actividades realizadas", "5"},
        {"Resultados, análisis, prototipos, manuales, etc.", "45"},
        {"Conclusiones, recomendaciones y experiencia profesional", "15"},
        {"Competencias desarrolladas y aplicadas", "2"},
        {"Fuentes de información", "5"}
    };

    for (String[] row : criterios) {
        table.addCell(getCenteredCell(row[0], false));    
        table.addCell(getCenteredCell(row[1], true));      
        table.addCell(getCenteredCell("______", true));    
    }

    // Fila TOTAL
    table.addCell(getCenteredCell("CALIFICACIÓN TOTAL", false));
    table.addCell(getCenteredCell("100", true));
    table.addCell(getCenteredCell("______", true));

    doc.add(table);
}
    
    private PdfPCell getCenteredCell(String text, boolean center) {
    PdfPCell cell = new PdfPCell(new Phrase(text));
    if (center) {
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
    } else {
        cell.setHorizontalAlignment(Element.ALIGN_LEFT);
    }
    cell.setVerticalAlignment(Element.ALIGN_MIDDLE);
    return cell;
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        txtNumeroControl = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnGenerarPDF = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtVistaPrevia = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GENERACIÓN DE ACTAS");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Ingrese número de control:");

        btnSalir.setBackground(new java.awt.Color(204, 0, 0));
        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtNumeroControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroControlActionPerformed(evt);
            }
        });
        txtNumeroControl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroControlKeyTyped(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNumeroControl, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(btnSalir)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNumeroControl)
                            .addComponent(btnBuscar)))
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        btnGenerarPDF.setText("GENERAR PDF");
        btnGenerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarPDFActionPerformed(evt);
            }
        });

        txtVistaPrevia.setEditable(false);
        txtVistaPrevia.setColumns(20);
        txtVistaPrevia.setRows(5);
        jScrollPane2.setViewportView(txtVistaPrevia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerarPDF)
                .addGap(19, 19, 19))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGenerarPDF)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        PanelPrincipal p = new PanelPrincipal();
        p.estadoFrame = false;        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtNumeroControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroControlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroControlActionPerformed

    private void txtNumeroControlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroControlKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        String textoActual = txtNumeroControl.getText();
        // Permitir la lera 'c' o 'C' SOLO si el campo está vacío (posición inicial)
        if ((c == 'c' || c == 'C' || c == 'D' || c == 'd' || c == 'm' || c == 'M') && textoActual.length() == 0) {
            return; // se permite
        }

        // Permitir solo dígitos del 0 al 9
        if (!Character.isDigit(c) | txtNumeroControl.getText().length() > 8) {
            evt.consume(); // se bloquea
        }
    }//GEN-LAST:event_txtNumeroControlKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String noControl = txtNumeroControl.getText().trim();
    ControladoraEstudiante controlEst = new ControladoraEstudiante();
    estudianteActual = controlEst.buscarPorNumeroControl(noControl);

    if (estudianteActual == null) {
        txtVistaPrevia.setText("Estudiante no encontrado.");
        return;
    }

    Persona persona = estudianteActual.getIdPersona();
    Departamento departamento = estudianteActual.getIdDepartamento();
    Proyecto proyecto = estudianteActual.getIdProyecto();

    // Validaciones adicionales por si faltan datos
    if (persona == null || departamento == null || proyecto == null) {
        txtVistaPrevia.setText("El estudiante tiene datos incompletos para generar el acta.");
        return;
    }

    String nombreCompleto = persona.getNombre() + " " +
                             persona.getApellidoP() + " " +
                             persona.getApellidoM();
    String programa = departamento.getNombreDepartamento(); 
    String periodo = "___________________"; 

    StringBuilder sb = new StringBuilder();
    sb.append("Nombre del Residente: ").append(nombreCompleto).append("\n");
    sb.append("No. de Control: ").append(estudianteActual.getNumControl()).append("\n");
    sb.append("Programa Educativo: ").append(programa).append("\n");
    sb.append("Nombre del Proyecto: ").append(proyecto.getNombreProyecto()).append("\n");
    sb.append("Periodo de Realización: ").append(periodo).append("\n");
    sb.append("Calificación Final: ______________________________\n\n");

    sb.append("Evaluación del asesor externo:\n");
    sb.append("  Portada .................................................  ______\n");
    sb.append("  Agradecimientos ..........................................  ______\n");
    sb.append("  Resumen ..................................................  ______\n");
    sb.append("  Índice ...................................................  ______\n");
    sb.append("  Introducción .............................................  ______\n");
    sb.append("  Problemas a resolver, priorizándolos .....................  ______\n");
    sb.append("  Objetivos ................................................  ______\n");
    sb.append("  Justificación ............................................  ______\n");
    sb.append("  Marco teórico ............................................  ______\n");
    sb.append("  Procedimiento y descripción de actividades ...............  ______\n");
    sb.append("  Resultados, análisis, prototipos, programas, etc .........  ______\n");
    sb.append("  Conclusiones y recomendaciones ...........................  ______\n");
    sb.append("  Competencias desarrolladas y aplicadas ...................  ______\n");
    sb.append("  Fuentes de información ...................................  ______\n");
    sb.append("  TOTAL ..................................................    ______\n\n");

    sb.append("Nombre y firma del asesor externo: __________________________\n");
    sb.append("Sello de la empresa: __________________ Fecha: ______________\n\n");

    sb.append("Evaluación del asesor interno:\n");
    sb.append("  Portada .................................................  ______\n");
    sb.append("  Agradecimientos ..........................................  ______\n");
    sb.append("  Resumen ..................................................  ______\n");
    sb.append("  Índice ...................................................  ______\n");
    sb.append("  Introducción .............................................  ______\n");
    sb.append("  Problemas a resolver, priorizándolos .....................  ______\n");
    sb.append("  Objetivos ................................................  ______\n");
    sb.append("  Justificación ............................................  ______\n");
    sb.append("  Marco teórico ............................................  ______\n");
    sb.append("  Procedimiento y descripción de actividades ...............  ______\n");
    sb.append("  Resultados, análisis, prototipos, programas, etc .........  ______\n");
    sb.append("  Conclusiones y recomendaciones ...........................  ______\n");
    sb.append("  Competencias desarrolladas y aplicadas ...................  ______\n");
    sb.append("  Fuentes de información ...................................  ______\n");
    sb.append("  TOTAL ..................................................    ______\n\n");

    sb.append("Observaciones:\n\n\n");

    sb.append("Nombre y firma del asesor interno: __________________________\n");
    sb.append("Sello de la Institución: __________________ Fecha: __________\n");

    txtVistaPrevia.setText(sb.toString());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGenerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarPDFActionPerformed
        // TODO add your handling code here:
    if (estudianteActual == null) {
        JOptionPane.showMessageDialog(this, "Debe buscar un estudiante válido antes de generar el PDF.");
        return;
    }

    Proyecto proyecto = estudianteActual.getIdProyecto();
    if (proyecto == null) {
        JOptionPane.showMessageDialog(this, "El estudiante no tiene un proyecto asignado.\nNo se puede generar el acta.");
        return;
    }

    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Guardar Acta de Calificación");
    String nombreArchivo = "ActaCalificacion_" + estudianteActual.getNumControl() + ".pdf";
    fileChooser.setSelectedFile(new File(nombreArchivo));

    int userSelection = fileChooser.showSaveDialog(this);
    if (userSelection != JFileChooser.APPROVE_OPTION) return;

    File archivoPDF = fileChooser.getSelectedFile();

    try {
        Rectangle folio = new Rectangle(612, 936); // Tamaño Folio (8.5" x 13")
        Document doc = new Document(folio, 45, 45, 5, 5); // márgenes: izq, der, sup, inf

        PdfWriter.getInstance(doc, new FileOutputStream(archivoPDF));
        doc.open();

        Image logoTecnm = Image.getInstance(getClass().getResource("/Imagenes/logo_tecnm.png"));
        Image logoITO = Image.getInstance(getClass().getResource("/Imagenes/logo_ito.png"));
        logoTecnm.scaleToFit(100, 100);
        logoITO.scaleToFit(80, 80);

        PdfPCell celdaLogoITO = new PdfPCell(logoITO, false);
        celdaLogoITO.setBorder(Rectangle.NO_BORDER);
        celdaLogoITO.setHorizontalAlignment(Element.ALIGN_LEFT);
        celdaLogoITO.setVerticalAlignment(Element.ALIGN_MIDDLE);

        PdfPCell celdaLogoTecnm = new PdfPCell(logoTecnm, false);
        celdaLogoTecnm.setBorder(Rectangle.NO_BORDER);
        celdaLogoTecnm.setHorizontalAlignment(Element.ALIGN_RIGHT);
        celdaLogoTecnm.setVerticalAlignment(Element.ALIGN_MIDDLE);

        PdfPCell titleCell = new PdfPCell(new Phrase("FORMATO DE EVALUACIÓN DE REPORTE DE RESIDENCIA PROFESIONAL",
                                      new Font(Font.FontFamily.HELVETICA, 14, Font.BOLD)));
        titleCell.setBorder(Rectangle.NO_BORDER);
        titleCell.setHorizontalAlignment(Element.ALIGN_CENTER);
        titleCell.setVerticalAlignment(Element.ALIGN_MIDDLE);

        PdfPTable headerTable = new PdfPTable(3);
        headerTable.setWidthPercentage(100);
        headerTable.setWidths(new float[]{1f, 3f, 1f});
        headerTable.addCell(celdaLogoITO);
        headerTable.addCell(titleCell);
        headerTable.addCell(celdaLogoTecnm);

        doc.add(headerTable);
        doc.add(new Paragraph("\n"));

        Persona p = estudianteActual.getIdPersona();
        Departamento d = estudianteActual.getIdDepartamento();

        doc.add(new Paragraph("Nombre del Residente: " + p.getNombre() + " " + p.getApellidoP() + " " + p.getApellidoM()));
        doc.add(new Paragraph("No. de Control: " + estudianteActual.getNumControl()));
        doc.add(new Paragraph("Programa Educativo: " + d.getNombreDepartamento()));
        doc.add(new Paragraph("Nombre del Proyecto: " + proyecto.getNombreProyecto()));
        doc.add(new Paragraph("Periodo de realización: ____________________________"));
        doc.add(new Paragraph("Calificación Final: ____________________\n\n"));

        addEvaluacionTable(doc, "Evaluación por el asesor externo");
        doc.add(new Paragraph("Nombre y firma del asesor externo: ____________________\nSello de la empresa: ____________________ Fecha: ____________\n"));
        
        doc.add(new Paragraph("Observaciones:____________________________________________________________\n\n"));

        addEvaluacionTable(doc, "Evaluación por el asesor interno");
        doc.add(new Paragraph("Nombre y firma del asesor interno: ____________________\nSello de la Institución: ____________________ Fecha: ____________\n"));

        doc.add(new Paragraph("Observaciones:____________________________________________________________\n"));

        doc.close();
        JOptionPane.showMessageDialog(this, "PDF generado con éxito en:\n" + archivoPDF.getAbsolutePath());

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al generar PDF:\n" + e.getMessage());
    }
    }//GEN-LAST:event_btnGenerarPDFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActaCalificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActaCalificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActaCalificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActaCalificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActaCalificacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerarPDF;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtNumeroControl;
    private javax.swing.JTextArea txtVistaPrevia;
    // End of variables declaration//GEN-END:variables
}
